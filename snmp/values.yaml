# Default values for the SNMP plugin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Partially override the fullname template (will maintain the release name).
nameOverride: ""

## Fully override the fullname template.
fullnameOverride: ""

## Plugin configuration
##
## The configuration below specifies a basic default configuration for the plugin.
## Deployments which require anything different than this basic configuration will
## need to specify their own config wholesale - single fields may not be overridden
## from this config block.
##
## If the plugin will use dynamic configuration, this should be set here, under the
## `dynamicRegistration` config option. See the SDK documentation and plugin README
## for more details.
config:
  version: 3
  debug: true
  network:
    type: tcp
    address: ":5003"
  settings:
    mode: serial
    read:
      interval: 3s
      buffer: 1024
    write:
      # The SNMP plugin does not currently support writes
      enabled: false

## Device configuration
##
## Each instance should define its own device configuration. This may be different
## per deployment depending on what physical assets are available,. If using dynamic
## registration, this field does not need to be set. Instead, the `config` option
## should be overridden with the dynamic registration configuration.
devices: {}

## Labels applied to all manifest objects for the Chart.
globalLabels: {}

## Image configuration options.
image:
  registry: ""
  repository: vaporio/snmp-plugin
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## Pull secrets for pulling private images.
imagePullSecrets: []
#  - name: my-pull-secret

## Enable/disable application metrics export via Prometheus.
metrics:
  enabled: false

  ## Labels applied to the metrics service definition. This should be
  ## set when running with Prometheus monitoring so the service monitor
  ## can differentiate the metrics service from other defined services.
  labels: {}

## Service account configuration options.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  create: false
  annotations: {}
  labels: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

## Deployment configuration options.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
deployment:
  annotations: {}
  labels: {}
  replicas: 1

## Configuration options for container security context.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Pod-specific configuration options.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/
pod:
  annotations: {}
  labels: {}
  hostname: ""

## Service configuration options.
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
## The port defined here should match the plugin configuration, below.
service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 5003

## Prometheus monitoring configuration.
## ref: https://docs.openshift.com/container-platform/4.4/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
serviceMonitor:
  enabled: false
  name: snmp-monitor
  port: metrics
  path: /metrics
  timeout: 4s
  interval: 5s

  namespace: ""
  labels: {}
    # vapor.io/monitor: application

  selectorNamespace: ""
  selectorLabels: {}

## Configuration options for a PodDisruptionBudget.
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/#specifying-a-poddisruptionbudget
podDisruptionBudget:
  enabled: false
  annotations: {}
  labels: {}
#  minAvailable: 2
#  maxUnavailable: 1

## Configuration options for pod security policies.
## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: false
  name: ""
  annotations: {}
  labels: {}
  allowances: {}
#    privileged: false
#    seLinux:
#      rule: RunAsAny
#    supplementalGroups:
#      rule: RunAsAny
#    runAsUser:
#      rule: RunAsAny
#    fsGroup:
#      rule: RunAsAny
#    volumes:
#      - '*'

## Readiness and liveness probe configuration options.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  enabled: true
  initialDelaySeconds: 15
  timeoutSeconds: 3
  periodSeconds: 5
  failureThreshold: 2

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 5
  failureThreshold: 2

## Specify arguments to pass to the container. By default, no arguments are passed.
## ref: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
##
## For additional startup logging, you can pass the --debug flag.
#args: ["--debug"]
args: []

## Allow pass-through environment variable configuration.
## ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
env: []
  # - name: FOO
  #   value: bar

## Configure resource requests and limits.
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Node labels for pod assignment.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Tolerations for pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
